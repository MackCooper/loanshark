--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.12
-- Dumped by pg_dump version 9.5.12

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: add_user(text, text); Type: FUNCTION; Schema: public; Owner: oliver
--

CREATE FUNCTION public.add_user(first_name text, last_name text) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
INSERT INTO users(first_name, last_name) VALUES (first_name, last_name);
END;
$$;


ALTER FUNCTION public.add_user(first_name text, last_name text) OWNER TO oliver;

--
-- Name: get_table_data(integer); Type: FUNCTION; Schema: public; Owner: oliver
--

CREATE FUNCTION public.get_table_data(searcheduser integer) RETURNS TABLE(owner text, sender text, cost money, date date, description text)
    LANGUAGE plpgsql
    AS $$
BEGIN
RETURN QUERY SELECT a.owner, b.sender, a.cost, a.date, a.description FROM ( SELECT transactionid, first_name as owner, transactions.cost, transactions.date, transactions.description FROM transactions INNER JOIN users ON transactions.owner = users.uid WHERE users.uid = searchedUser) AS a NATURAL JOIN ( SELECT transactionid, first_name as sender FROM users INNER JOIN transactions ON transactions.sender = users.uid) AS b;
END; $$;


ALTER FUNCTION public.get_table_data(searcheduser integer) OWNER TO oliver;

--
-- Name: transactionid_seq; Type: SEQUENCE; Schema: public; Owner: oliver
--

CREATE SEQUENCE public.transactionid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.transactionid_seq OWNER TO oliver;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: transactions; Type: TABLE; Schema: public; Owner: oliver
--

CREATE TABLE public.transactions (
    transactionid integer DEFAULT nextval('public.transactionid_seq'::regclass) NOT NULL,
    owner integer NOT NULL,
    sender integer NOT NULL,
    cost money NOT NULL,
    date date DEFAULT ('now'::text)::date NOT NULL,
    description text
);


ALTER TABLE public.transactions OWNER TO oliver;

--
-- Name: uid_seq; Type: SEQUENCE; Schema: public; Owner: oliver
--

CREATE SEQUENCE public.uid_seq
    START WITH 1
    INCREMENT BY 1
    MINVALUE 0
    MAXVALUE 2147483647
    CACHE 1;


ALTER TABLE public.uid_seq OWNER TO oliver;

--
-- Name: users; Type: TABLE; Schema: public; Owner: oliver
--

CREATE TABLE public.users (
    uid integer DEFAULT nextval('public.uid_seq'::regclass) NOT NULL,
    first_name text NOT NULL,
    last_name text NOT NULL
);


ALTER TABLE public.users OWNER TO oliver;

--
-- Name: transactionid_seq; Type: SEQUENCE SET; Schema: public; Owner: oliver
--

SELECT pg_catalog.setval('public.transactionid_seq', 2, true);


--
-- Data for Name: transactions; Type: TABLE DATA; Schema: public; Owner: oliver
--

COPY public.transactions (transactionid, owner, sender, cost, date, description) FROM stdin;
1	1	2	$30.00	2018-11-13	T-Shirt bought in States
2	1	3	$3.00	2018-12-25	Icecream Sandwich
\.


--
-- Name: uid_seq; Type: SEQUENCE SET; Schema: public; Owner: oliver
--

SELECT pg_catalog.setval('public.uid_seq', 5, true);


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: oliver
--

COPY public.users (uid, first_name, last_name) FROM stdin;
1	Oliver	Tonnesen
2	Mackenzie	Cooper
3	Matthew	Holmes
4	Victor	Sun
5	Cougar	Oakes
\.


--
-- Name: transactions2_pkey; Type: CONSTRAINT; Schema: public; Owner: oliver
--

ALTER TABLE ONLY public.transactions
    ADD CONSTRAINT transactions2_pkey PRIMARY KEY (transactionid);


--
-- Name: users2_pkey; Type: CONSTRAINT; Schema: public; Owner: oliver
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users2_pkey PRIMARY KEY (uid);


--
-- Name: transactions2_owner_fkey; Type: FK CONSTRAINT; Schema: public; Owner: oliver
--

ALTER TABLE ONLY public.transactions
    ADD CONSTRAINT transactions2_owner_fkey FOREIGN KEY (owner) REFERENCES public.users(uid);


--
-- Name: transactions2_sender_fkey; Type: FK CONSTRAINT; Schema: public; Owner: oliver
--

ALTER TABLE ONLY public.transactions
    ADD CONSTRAINT transactions2_sender_fkey FOREIGN KEY (sender) REFERENCES public.users(uid);


--
-- Name: SCHEMA public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

